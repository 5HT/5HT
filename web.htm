<html>
<head>
    <meta charset="utf-8" />
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <meta name="description" content="" />
    <meta name="author" content="Maxim Sokhatsky" />
    <title>Web Logic</title>
    <link rel="stylesheet" href="5HT.css" />
</head>
<body>
<div class=menu>
<a href="index.html">articles</a>
</div>
<hr>
<div class=app>

<h2>N2O Application Server</h2>

<h3>Web Logic</h3>

<div class=message>

<p>Web logic shoudl be as much declarative as possible
at the same time the web logic language should be readable by Java, .NET engineers.
Web Logic of Deposits Application is powered by N2O WebSocket Application Server.</p>

<p><img src="img/web1.png" width=800></p>

<div class=note>
<p><b>Note:</b> Operating clean and minimalistic API will allow you engineers
to think on core features of the system, SpawnProc provides most
minimal Business Processing frameworks and libraries.</p></div>

<h3>Autogenerated Forms</h3>

<center>Picture 3. One-Time Password Form</center><br>
<p><img src="img/otp.png"></p>

<center>Listing 3. OTP Form</center><br>
<div class=note><pre>document(Name,Phone) -> #document { name = Name,

    sections =
       [ #sec { name= [ deposits:translate({?MODULE,message}), 
               wf:to_list(Phone#phone.number)] } ],

    buttons  =
      [ #but { name='decline', title=deposits:translate(decline),
               class=cancel, postback={'CloseOpenedForm', Name} },

        #but { name='next', title = deposits:translate(proceed),
               class = [button,sgreen], sources = [otp],
               postback = {'Spinner', {'OpenForm',Name}} } ],

    fields =
      [ #field { name='otp', type=otp, 
                title= deposits:translate({?MODULE,pass}),
                labelClass=label, fieldClass=column3} ] }.
</pre></div></p>


</div>
</div>
</body>
</html>
